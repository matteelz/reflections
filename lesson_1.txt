1.) How did viewing a diff between two versions of a file help you see the bug that
was introduced?
It saved me the time of checking the whole file by only showing the changed parts.

2.) How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?
By letting me reflect on the progress and thought process of previous versions as well as
automatically backupping all the work.

3.) What do you think are the pros and cons of manually choosing when to create a commit,
like you do in Git, vs having versions automatically saved, like Google Docs does?
Commits can be done logical including selfreflection which leads to a better overview
and less cluttering.

4.) Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?
Git allows multiple files due to the nature of interconnectivity between files
in programming. Google Docs doesnt, because docs usually stand on its own.

5.) How can you use the commands git log and git diff to view the history of files?
By finding the wanted commits with git log and comparing them with another by
copy pasting the ids one after another after the command git diff.

6.)How might using version control make you more confident to make changes that
could break something?
By knowing I can revert withot hastle at any time including seeing all changes.

7.)Now that you have your workspace set up, what do you want to try using Git for?
Version control I guess lol.
